{{- if default .Values.rollout.enabled false }}
apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: {{ include "aio.fullname" . }}
  labels:
    {{- include "aio.labels" . | nindent 4 }}
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "aio.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "aio.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "aio.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
          - name: all-ine-one-secrets
            mountPath: /secrets
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -c
              - "ps"
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            exec:
              command:
              - /bin/sh
              - -c
              - "ps"
            initialDelaySeconds: 15
            periodSeconds: 20
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
      - name: all-ine-one-secrets
        secret:
          secretName: {{ .Values.secret.name }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  strategy:
    blueGreen: 
      activeMetadata:
        labels:
          role: active
      previewMetadata:
        labels:
          role: preview
      # activeService specifies the service to update with the new template hash at time of promotion.
      # This field is mandatory for the blueGreen update strategy.
      activeService: {{ include "aio.fullname" . }}-active
      # previewService specifies the service to update with the new template hash before promotion.
      # This allows the preview stack to be reachable without serving production traffic.
      # This field is optional.
      previewService: {{ include "aio.fullname" . }}-preview
      # autoPromotionEnabled disables automated promotion of the new stack by pausing the rollout
      # immediately before the promotion. If omitted, the default behavior is to promote the new
      # stack as soon as the ReplicaSet are completely ready/available.
      # Rollouts can be resumed using: `kubectl argo rollouts promote ROLLOUT`
      autoPromotionEnabled: true
      #autoPromotionSeconds: *int32
      #antiAffinity: object
      prePromotionAnalysis:
        templates:
        # - templateName: random-fail
        #   clusterScope: true
        - templateName: api-test-mesh
          clusterScope: true
        # - templateName: success-rate
        #   clusterScope: true
        # - templateName: error-rate
        #   clusterScope: true
        args:
        - name: service-name
          value: {{ include "aio.fullname" . }}-preview.{{ .Values.targetNamepace }}.svc.cluster.local:{{ .Values.service.port }}
      #postPromotionAnalysis: object
      previewReplicaCount: 1
      #scaleDownDelaySeconds: *int32
      #scaleDownDelayRevisionLimit: *int32
{{- end }}
